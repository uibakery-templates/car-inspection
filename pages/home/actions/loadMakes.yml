id: '16944339110380.9777412750413716'
name: loadMakes
nameConfigured: true
steps:
  - id: '16944339200790.6530673074057829'
    type: LOAD_COLLECTION
    name: load
    params:
      - type: datasourceId
        value: QALKxyGG7u
        valueType: custom
        mustSelectFirst: true
      - type: resourceId
        value: f49d6d33-af44-4e80-8607-d97584ece9a2
        valueType: custom
        mustSelectFirst: true
      - type: filters
        value: []
        valueType: custom
        interpolationType: string
      - type: ordering
        value:
          limit:
            value: 1000
          offset:
            value: ''
          orderBy:
            value: ''
          orderDirection:
            value: asc
        valueType: custom
        interpolationType: string
      - type: additionalParams
        value: []
        valueType: custom
        interpolationType: string
      - type: customDatabaseName
        value: ''
        valueType: interpolatedValue
      - type: successMapper
        value: ''
        valueType: interpolatedValue
        interpolationType: code
      - type: failureMapper
        value: ''
        valueType: interpolatedValue
        interpolationType: code
      - type: mapperEnabled
        value: false
        valueType: custom
    level: 0
    fallthroughError: false
    isChanged: false
  - id: '16944450943370.27717387173493746'
    type: customAsyncCode
    name: shortNames
    params:
      - type: asyncCode
        value: |-
          return {{data}}.map(item => {
            if (item.make_id === 'Mercedes-Benz') {
              item.make_id = 'Mercedes';
            }
            return item;
          });
        valueType: interpolatedValue
        interpolationType: code
    level: 0
    fallthroughError: false
    isChanged: true
    nameConfigured: true
  - id: '16944339289570.7388453566677275'
    type: customAsyncCode
    name: addColor
    params:
      - type: asyncCode
        value: |-
          const colors = [
            'primary', 'success', 'info', 'warning', 'danger', 'basic', 
            'primary-light', 'success-light', 'info-light', 'warning-light', 'danger-light', 
            'primary-dark', 'success-dark', 'info-dark', 'warning-dark', 'danger-dark'
          ];

          let uniqueMakes = {{data}}.reduce((unique, car, index) => {
            const isDuplicate = unique.some(item => item.label === car.make_id);
            if (!isDuplicate) {
              unique.push({
                label: car.make_id,
                value: car.make_id,
                color: colors[index % colors.length], // assign a color from the array
              });
            }
            return unique;
          }, []);

          // Add an option with null value
          uniqueMakes.unshift({
            label: 'Any make',
            value: null,
            color: 'basic', // assign any color you like
          });

          return uniqueMakes;
        valueType: interpolatedValue
        interpolationType: code
    level: 0
    fallthroughError: false
    isChanged: true
    nameConfigured: true
singleStep: false
mode: manual
modeConfigured: false
parentPageId: '1'
folder: false
parentId: null
config:
  shouldConfirm: false
  confirmMessage: Are you sure you'd like to proceed with "{{actions.loadMakes.name}}"?
  showSuccessToast: false
  successToast: Action "{{actions.loadMakes.name}}" successfully executed
  successToastDuration: '3000'
  successToastHideByClick: false
  showErrorToast: true
  errorToast: Action "{{actions.loadMakes.name}}" has failed
  errorToastDuration: '3000'
  errorToastHideByClick: false
  delay: '0'
  runWhenFirstReferenced: true
  preserveStateOnPageChange: false
assigned: false
selected: true
configured: true
index: 2
